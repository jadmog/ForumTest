{"ast":null,"code":"/**\n * Module dependencies.\n */\nvar http = require('http'),\n    req = http.IncomingMessage.prototype;\n/**\n * Intiate a login session for `user`.\n *\n * Options:\n *   - `session`  Save login state in session, defaults to _true_\n *\n * Examples:\n *\n *     req.logIn(user, { session: false });\n *\n *     req.logIn(user, function(err) {\n *       if (err) { throw err; }\n *       // session saved\n *     });\n *\n * @param {User} user\n * @param {Object} options\n * @param {Function} done\n * @api public\n */\n\n\nreq.login = req.logIn = function (user, options, done) {\n  if (!this._passport) throw new Error('passport.initialize() middleware not in use');\n\n  if (!done && typeof options === 'function') {\n    done = options;\n    options = {};\n  }\n\n  options = options || {};\n  var property = this._passport.instance._userProperty || 'user';\n  var session = options.session === undefined ? true : options.session;\n  this[property] = user;\n\n  if (session) {\n    var self = this;\n\n    this._passport.instance.serializeUser(user, function (err, obj) {\n      if (err) {\n        self[property] = null;\n        return done(err);\n      }\n\n      self._passport.session.user = obj;\n      done();\n    });\n  } else {\n    done && done();\n  }\n};\n/**\n * Terminate an existing login session.\n *\n * @api public\n */\n\n\nreq.logout = req.logOut = function () {\n  if (!this._passport) throw new Error('passport.initialize() middleware not in use');\n  var property = this._passport.instance._userProperty || 'user';\n  this[property] = null;\n  delete this._passport.session.user;\n};\n/**\n * Test if request is authenticated.\n *\n * @return {Boolean}\n * @api public\n */\n\n\nreq.isAuthenticated = function () {\n  var property = 'user';\n\n  if (this._passport && this._passport.instance._userProperty) {\n    property = this._passport.instance._userProperty;\n  }\n\n  return this[property] ? true : false;\n};\n/**\n * Test if request is unauthenticated.\n *\n * @return {Boolean}\n * @api public\n */\n\n\nreq.isUnauthenticated = function () {\n  return !this.isAuthenticated();\n};","map":{"version":3,"sources":["/Users/fadimoughaizel/Desktop/Portfolio/Forum/forum/node_modules/passport/lib/passport/http/request.js"],"names":["http","require","req","IncomingMessage","prototype","login","logIn","user","options","done","_passport","Error","property","instance","_userProperty","session","undefined","self","serializeUser","err","obj","logout","logOut","isAuthenticated","isUnauthenticated"],"mappings":"AAAA;;;AAGA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;AAAA,IACIC,GAAG,GAAGF,IAAI,CAACG,eAAL,CAAqBC,SAD/B;AAIA;;;;;;;;;;;;;;;;;;;;;;AAoBAF,GAAG,CAACG,KAAJ,GACAH,GAAG,CAACI,KAAJ,GAAY,UAASC,IAAT,EAAeC,OAAf,EAAwBC,IAAxB,EAA8B;AACxC,MAAI,CAAC,KAAKC,SAAV,EAAqB,MAAM,IAAIC,KAAJ,CAAU,6CAAV,CAAN;;AAErB,MAAI,CAACF,IAAD,IAAS,OAAOD,OAAP,KAAmB,UAAhC,EAA4C;AAC1CC,IAAAA,IAAI,GAAGD,OAAP;AACAA,IAAAA,OAAO,GAAG,EAAV;AACD;;AACDA,EAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AACA,MAAII,QAAQ,GAAG,KAAKF,SAAL,CAAeG,QAAf,CAAwBC,aAAxB,IAAyC,MAAxD;AACA,MAAIC,OAAO,GAAIP,OAAO,CAACO,OAAR,KAAoBC,SAArB,GAAkC,IAAlC,GAAyCR,OAAO,CAACO,OAA/D;AAEA,OAAKH,QAAL,IAAiBL,IAAjB;;AACA,MAAIQ,OAAJ,EAAa;AACX,QAAIE,IAAI,GAAG,IAAX;;AACA,SAAKP,SAAL,CAAeG,QAAf,CAAwBK,aAAxB,CAAsCX,IAAtC,EAA4C,UAASY,GAAT,EAAcC,GAAd,EAAmB;AAC7D,UAAID,GAAJ,EAAS;AAAEF,QAAAA,IAAI,CAACL,QAAD,CAAJ,GAAiB,IAAjB;AAAuB,eAAOH,IAAI,CAACU,GAAD,CAAX;AAAmB;;AACrDF,MAAAA,IAAI,CAACP,SAAL,CAAeK,OAAf,CAAuBR,IAAvB,GAA8Ba,GAA9B;AACAX,MAAAA,IAAI;AACL,KAJD;AAKD,GAPD,MAOO;AACLA,IAAAA,IAAI,IAAIA,IAAI,EAAZ;AACD;AACF,CAvBD;AAyBA;;;;;;;AAKAP,GAAG,CAACmB,MAAJ,GACAnB,GAAG,CAACoB,MAAJ,GAAa,YAAW;AACtB,MAAI,CAAC,KAAKZ,SAAV,EAAqB,MAAM,IAAIC,KAAJ,CAAU,6CAAV,CAAN;AAErB,MAAIC,QAAQ,GAAG,KAAKF,SAAL,CAAeG,QAAf,CAAwBC,aAAxB,IAAyC,MAAxD;AAEA,OAAKF,QAAL,IAAiB,IAAjB;AACA,SAAO,KAAKF,SAAL,CAAeK,OAAf,CAAuBR,IAA9B;AACD,CARD;AAUA;;;;;;;;AAMAL,GAAG,CAACqB,eAAJ,GAAsB,YAAW;AAC/B,MAAIX,QAAQ,GAAG,MAAf;;AACA,MAAI,KAAKF,SAAL,IAAkB,KAAKA,SAAL,CAAeG,QAAf,CAAwBC,aAA9C,EAA6D;AAC3DF,IAAAA,QAAQ,GAAG,KAAKF,SAAL,CAAeG,QAAf,CAAwBC,aAAnC;AACD;;AAED,SAAQ,KAAKF,QAAL,CAAD,GAAmB,IAAnB,GAA0B,KAAjC;AACD,CAPD;AASA;;;;;;;;AAMAV,GAAG,CAACsB,iBAAJ,GAAwB,YAAW;AACjC,SAAO,CAAC,KAAKD,eAAL,EAAR;AACD,CAFD","sourcesContent":["/**\n * Module dependencies.\n */\nvar http = require('http')\n  , req = http.IncomingMessage.prototype;\n\n\n/**\n * Intiate a login session for `user`.\n *\n * Options:\n *   - `session`  Save login state in session, defaults to _true_\n *\n * Examples:\n *\n *     req.logIn(user, { session: false });\n *\n *     req.logIn(user, function(err) {\n *       if (err) { throw err; }\n *       // session saved\n *     });\n *\n * @param {User} user\n * @param {Object} options\n * @param {Function} done\n * @api public\n */\nreq.login =\nreq.logIn = function(user, options, done) {\n  if (!this._passport) throw new Error('passport.initialize() middleware not in use');\n  \n  if (!done && typeof options === 'function') {\n    done = options;\n    options = {};\n  }\n  options = options || {};\n  var property = this._passport.instance._userProperty || 'user';\n  var session = (options.session === undefined) ? true : options.session;\n  \n  this[property] = user;\n  if (session) {\n    var self = this;\n    this._passport.instance.serializeUser(user, function(err, obj) {\n      if (err) { self[property] = null; return done(err); }\n      self._passport.session.user = obj;\n      done();\n    });\n  } else {\n    done && done();\n  }\n}\n\n/**\n * Terminate an existing login session.\n *\n * @api public\n */\nreq.logout =\nreq.logOut = function() {\n  if (!this._passport) throw new Error('passport.initialize() middleware not in use');\n  \n  var property = this._passport.instance._userProperty || 'user';\n  \n  this[property] = null;\n  delete this._passport.session.user;\n};\n\n/**\n * Test if request is authenticated.\n *\n * @return {Boolean}\n * @api public\n */\nreq.isAuthenticated = function() {\n  var property = 'user';\n  if (this._passport && this._passport.instance._userProperty) {\n    property = this._passport.instance._userProperty;\n  }\n  \n  return (this[property]) ? true : false;\n};\n\n/**\n * Test if request is unauthenticated.\n *\n * @return {Boolean}\n * @api public\n */\nreq.isUnauthenticated = function() {\n  return !this.isAuthenticated();\n};\n"]},"metadata":{},"sourceType":"script"}