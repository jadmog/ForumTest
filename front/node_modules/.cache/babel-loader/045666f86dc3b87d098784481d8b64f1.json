{"ast":null,"code":"var _jsxFileName = \"/Users/fadimoughaizel/Desktop/Portfolio/Forum/front/src/components/CreateAnswer.js\";\nimport React, { useRef, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport buttonStyle from '../components/button.module.css';\nimport Axios from 'axios';\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n  return {\n    top: `50%`,\n    left: `50%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  }\n}));\nexport default function SimpleModal() {\n  const classes = useStyles(); // getModalStyle is not a pure function, we roll the style only on the first render\n\n  const [modalStyle] = React.useState(getModalStyle);\n  const [open, setOpen] = React.useState(false);\n  const inputAnswer = useRef(null);\n  const [answers, setAnswers] = useState([]);\n  let {\n    thread\n  } = useParams();\n\n  const submitAnswer = () => {\n    const fieldAnswer = inputAnswer.current.value;\n    Axios({\n      method: \"POST\",\n      data: {\n        username: 'testUsername',\n        subject: 'testSubject',\n        thread: thread,\n        body: fieldAnswer\n      },\n      withCredentials: true,\n      url: \"http://localhost:5000/answers/answer\",\n      timeout: 4000\n    }).then(newAnswer => {\n      console.log('thread', newAnswer); // \n\n      setAnswers([...answers, newAnswer]);\n      setOpen(false);\n      alert('Answer saved !');\n    }).catch(error => console.log('error', error));\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const body = /*#__PURE__*/React.createElement(\"div\", {\n    style: modalStyle,\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    id: \"simple-modal-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, \"Write your answer!\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    ref: inputAnswer,\n    rows: \"10\",\n    cols: \"40\",\n    placeholder: \"Write answer here\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    onClick: submitAnswer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, \"Ok\"));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: buttonStyle.coolBeans,\n    onClick: handleOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, \"Write your answer\"), /*#__PURE__*/React.createElement(Modal, {\n    open: open,\n    \"aria-labelledby\": \"simple-modal-title\",\n    \"aria-describedby\": \"simple-modal-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, body));\n}","map":{"version":3,"sources":["/Users/fadimoughaizel/Desktop/Portfolio/Forum/front/src/components/CreateAnswer.js"],"names":["React","useRef","useState","makeStyles","Modal","buttonStyle","Axios","rand","Math","round","random","getModalStyle","top","left","transform","useStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","SimpleModal","classes","modalStyle","open","setOpen","inputAnswer","answers","setAnswers","thread","useParams","submitAnswer","fieldAnswer","current","value","method","data","username","subject","body","withCredentials","url","timeout","then","newAnswer","console","log","alert","catch","error","handleOpen","handleClose","coolBeans"],"mappings":"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","sourcesContent":["import React, {useRef, useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport buttonStyle from '../components/button.module.css'\nimport Axios from 'axios'\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n\n  return {\n    top: `50%`,\n    left: `50%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n  \n}));\n\nexport default function SimpleModal() {\n  const classes = useStyles();\n  // getModalStyle is not a pure function, we roll the style only on the first render\n  const [modalStyle] = React.useState(getModalStyle);\n  const [open, setOpen] = React.useState(false);\n  const inputAnswer = useRef(null);\n  const [answers, setAnswers] = useState([])\n  let { thread } = useParams();\n  const submitAnswer = () => {\n\n  const fieldAnswer = inputAnswer.current.value;\n    Axios({\n      method: \"POST\",\n      data: {\n         username: 'testUsername',\n         subject: 'testSubject',\n         thread: thread,\n         body: fieldAnswer,\n      },\n      withCredentials: true,\n      url: \"http://localhost:5000/answers/answer\",\n      timeout: 4000\n    }).then(newAnswer => {\n      console.log('thread', newAnswer);\n      // \n      setAnswers([\n        ...answers,\n        newAnswer\n      ])\n      setOpen(false)\n      alert('Answer saved !')\n    })\n    .catch(error => console.log('error', error));\n  }\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const body = (\n    <div style={modalStyle} className={classes.paper}>\n      <h2 id=\"simple-modal-title\">Write your answer!</h2>\n      <div>\n      <textarea ref={inputAnswer} rows=\"10\" cols=\"40\" placeholder=\"Write answer here\"></textarea></div>\n      <button type=\"submit\" onClick={handleClose}>Cancel</button>\n      <button type=\"submit\" onClick={submitAnswer}>Ok</button>\n    </div>\n  );\n\n  return (\n    <div>\n      <button type=\"button\" className={buttonStyle.coolBeans}onClick={handleOpen}>\n        Write your answer\n      </button>\n      <Modal\n        open={open}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        {body}\n      </Modal>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}