{"ast":null,"code":"var _jsxFileName = \"/Users/fadimoughaizel/Desktop/Portfolio/Forum/forum/src/Pages/ThreadPage.js\";\nimport React, { useEffect, useState, setState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport CreateAnswer from '../components/CreateAnswer';\nimport ScrollTop from '../components/ScrollTop.js';\nimport Axios from 'axios';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    maxWidth: '200ch',\n    backgroundColor: theme.palette.background.paper\n  },\n  inline: {\n    display: 'inline'\n  }\n}));\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n  return {\n    top: `50%`,\n    left: `50%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\n\nconst useStyles2 = makeStyles(theme => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  }\n}));\nexport default function AlignItemsList() {\n  const classes = useStyles();\n  let {\n    thread\n  } = useParams();\n  const classes2 = useStyles2(); // getModalStyle is not a pure function, we roll the style only on the first render\n\n  const [modalStyle] = React.useState(getModalStyle);\n  const [open, setOpen] = React.useState(false);\n  const inputAnswer = useRef(null);\n  console.log(inputAnswer);\n  const [answers, setAnswers] = useState([]);\n\n  const submitAnswer = () => {\n    Axios({\n      method: \"POST\",\n      data: {\n        username: 'testUsername',\n        subject: 'testSubject',\n        body: inputAnswer\n      },\n      withCredentials: true,\n      url: \"http://localhost:5000/threads/answer\",\n      timeout: 4000\n    }).then(newAnswer => {\n      console.log('thread', newAnswer); // \n\n      setAnswers([...answers, newAnswer]);\n      alert('Answer saved !');\n      setOpen(false);\n    }).catch(console.log('Error posting answer'));\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const body = /*#__PURE__*/React.createElement(\"div\", {\n    style: modalStyle,\n    className: classes2.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    id: \"simple-modal-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, \"Write your answer!\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    ref: inputAnswer,\n    rows: \"10\",\n    cols: \"40\",\n    placeholder: \"Write answer here\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    onClick: submitAnswer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, \"Ok\")); // const [answers, setAnswers]= useState([])\n\n  useEffect(() => {\n    Axios({\n      method: \"GET\",\n      withCredentials: true,\n      url: \"http://localhost:5000/answers/answer\",\n      timeout: 4000\n    }).then(result => {\n      console.log('result = ', result);\n      setAnswers(result.data);\n      console.log('answers = ', answers);\n    }).catch(error => console.log('error', error));\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: buttonStyle.coolBeans,\n    onClick: handleOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 5\n    }\n  }, \"Write your answer\"), /*#__PURE__*/React.createElement(Modal, {\n    open: open,\n    \"aria-labelledby\": \"simple-modal-title\",\n    \"aria-describedby\": \"simple-modal-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 5\n    }\n  }, body), /*#__PURE__*/React.createElement(ScrollTop, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(List, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 5\n    }\n  }, console.log('answers in html = ', answers), answers.filter(answer => {\n    return answer.thread === thread;\n  }).map(answer => /*#__PURE__*/React.createElement(ListItem, {\n    alignItems: \"flex-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ListItemAvatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    alt: \"Remy Sharp\",\n    src: \"/static/images/avatar/1.jpg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(ListItemText, {\n    primary: thread,\n    secondary: /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      component: \"span\",\n      variant: \"body2\",\n      className: classes.inline,\n      color: \"textPrimary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 15\n      }\n    }, answer.username)), answer.body),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  })))));\n}","map":{"version":3,"sources":["/Users/fadimoughaizel/Desktop/Portfolio/Forum/forum/src/Pages/ThreadPage.js"],"names":["React","useEffect","useState","setState","useParams","makeStyles","List","ListItem","Divider","ListItemText","ListItemAvatar","Avatar","Typography","CreateAnswer","ScrollTop","Axios","useStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","inline","display","rand","Math","round","random","getModalStyle","top","left","transform","useStyles2","position","border","boxShadow","shadows","padding","spacing","AlignItemsList","classes","thread","classes2","modalStyle","open","setOpen","inputAnswer","useRef","console","log","answers","setAnswers","submitAnswer","method","data","username","subject","body","withCredentials","url","timeout","then","newAnswer","alert","catch","handleOpen","handleClose","result","error","buttonStyle","coolBeans","filter","answer","map"],"mappings":"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","sourcesContent":["import React, {useEffect, useState, setState} from 'react';\nimport {useParams} from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport CreateAnswer from '../components/CreateAnswer'\nimport ScrollTop from '../components/ScrollTop.js'\nimport Axios from 'axios'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    maxWidth: '200ch',\n    backgroundColor: theme.palette.background.paper,\n  },\n  inline: {\n    display: 'inline',\n  },\n}));\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n\n  return {\n    top: `50%`,\n    left: `50%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles2 = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n  \n}));\n\n\nexport default function AlignItemsList() {\n  const classes = useStyles();\n  let {thread} = useParams()\n\n  const classes2 = useStyles2();\n  // getModalStyle is not a pure function, we roll the style only on the first render\n  const [modalStyle] = React.useState(getModalStyle);\n  const [open, setOpen] = React.useState(false);\n  const inputAnswer = useRef(null);\n  console.log(inputAnswer)\n  const [answers, setAnswers] = useState([])\n  const submitAnswer = () => {\n    Axios({\n      method: \"POST\",\n      data: {\n         username: 'testUsername',\n         subject: 'testSubject',\n         body: inputAnswer,\n      },\n      withCredentials: true,\n      url: \"http://localhost:5000/threads/answer\",\n      timeout: 4000\n    }).then(newAnswer => {\n      console.log('thread', newAnswer);\n      // \n      setAnswers([\n        ...answers,\n        newAnswer\n      ])\n      alert('Answer saved !')\n      setOpen(false)\n    })\n      .catch(console.log('Error posting answer'))\n  }\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const body = (\n    <div style={modalStyle} className={classes2.paper}>\n      <h2 id=\"simple-modal-title\">Write your answer!</h2>\n      <div>\n      <textarea ref={inputAnswer} rows=\"10\" cols=\"40\" placeholder=\"Write answer here\"></textarea></div>\n      <button type=\"submit\" onClick={handleClose}>Cancel</button>\n      <button type=\"submit\" onClick={submitAnswer}>Ok</button>\n    </div>\n  );\n\n  // const [answers, setAnswers]= useState([])\n  useEffect(() => {\n    Axios({\n      method: \"GET\",\n      withCredentials: true,\n      url: \"http://localhost:5000/answers/answer\",\n      timeout: 4000\n    }).then((result) => {\n      console.log('result = ', result)\n      setAnswers(result.data)\n      console.log( 'answers = ', answers)\n    })\n    .catch(error => console.log('error', error));\n  }, [])\n\n  return (\n    <div>\n    <button type=\"button\" className={buttonStyle.coolBeans}onClick={handleOpen}>\n      Write your answer\n    </button>\n    <Modal\n      open={open}\n      aria-labelledby=\"simple-modal-title\"\n      aria-describedby=\"simple-modal-description\"\n    >\n      {body}\n    </Modal>\n    <ScrollTop/>\n    <List className={classes.root}>\n      {console.log( 'answers in html = ',  answers)}\n    {answers\n     .filter((answer) => {\n      return answer.thread === thread \n     })\n    .map((answer) => (\n      <ListItem alignItems=\"flex-start\">\n        <ListItemAvatar>\n          <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\n        </ListItemAvatar>\n        <ListItemText\n          primary={thread}\n          secondary={\n            <React.Fragment>\n              <div>\n              <Typography\n                component=\"span\"\n                variant=\"body2\"\n                className={classes.inline}\n                color=\"textPrimary\"\n              >\n                {answer.username}\n              </Typography>\n              </div>\n               {answer.body}\n            </React.Fragment>\n          }\n        />\n      </ListItem>\n    ))}\n    </List>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}