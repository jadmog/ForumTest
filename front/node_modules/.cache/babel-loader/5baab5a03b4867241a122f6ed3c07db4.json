{"ast":null,"code":"var _jsxFileName = \"/Users/fadimoughaizel/Desktop/Portfolio/Forum/forum/src/Pages/ThreadPage.js\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport CreateAnswer from '../components/CreateAnswer';\nimport ScrollTop from '../components/ScrollTop.js';\nimport Axios from 'axios';\nimport Modal from '@material-ui/core/Modal';\nimport buttonStyle from '../components/button.module.css';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    maxWidth: '200ch',\n    backgroundColor: theme.palette.background.paper\n  },\n  inline: {\n    display: 'inline'\n  }\n}));\nexport default function AlignItemsList() {\n  const classes = useStyles();\n  let {\n    thread\n  } = useParams(); // getModalStyle is not a pure function, we roll the style only on the first render\n\n  const [modalStyle] = React.useState(getModalStyle);\n  const [open, setOpen] = React.useState(false);\n  const inputAnswer = useRef(null);\n  console.log(inputAnswer);\n\n  const submitAnswer = () => {\n    Axios({\n      method: \"POST\",\n      data: {\n        username: 'testUsername',\n        subject: 'testSubject',\n        body: inputAnswer\n      },\n      withCredentials: true,\n      url: \"http://localhost:5000/threads/answer\",\n      timeout: 4000\n    }).then(res => {\n      console.log(res);\n      setOpen(false);\n    }).catch(console.log('Error posting answer'));\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const body = /*#__PURE__*/React.createElement(\"div\", {\n    style: modalStyle,\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    id: \"simple-modal-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, \"Write your answer!\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    ref: inputAnswer,\n    rows: \"10\",\n    cols: \"40\",\n    placeholder: \"Write answer here\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, \"Ok\"));\n  const [messages, setMessages] = useState([{\n    title: 'Supernova',\n    username: 'Jadeups',\n    text: 'Interesting question! I think it has to do with voliminous dying stars.'\n  }, {\n    title: 'How are black holes created?',\n    username: 'Rayyouch',\n    text: 'Indeed, but how, more specifically ?'\n  }, {\n    title: 'How are black holes created?',\n    username: 'Jadeups',\n    text: \"I don't know I am looking for the answer at the moment\"\n  }, {\n    title: 'How are black holes created?',\n    username: 'Rayyouch',\n    text: 'They form when stars that are voluminous enough die'\n  }, {\n    title: 'How are black holes created?',\n    username: 'Davidov',\n    text: \"I agree, but isn't there any other way to form black holes?\"\n  }, {\n    title: 'How are black holes created?',\n    username: 'Sar',\n    text: \"Not all stars form black holes\"\n  }, {\n    title: 'How are black holes created?',\n    username: 'Rayyouch',\n    text: \"Yes we know, we said that they have to be volumious enough\"\n  }, {\n    title: 'How are black holes created?',\n    username: 'Davidov',\n    text: \"Exactly\"\n  }, {\n    title: 'How are black holes created?',\n    username: 'Davidov',\n    text: \"Doesn't this conversation spark the interest of more users? hahaha\"\n  }, {\n    title: 'How are black holes created?',\n    username: 'Rayyouch',\n    text: \"This forum is quite new, so there aren't many members.\"\n  }, {\n    title: 'How are black holes created?',\n    username: 'Davidov',\n    text: \"Yeah we're like 100 people on the forum tops I think.\"\n  }, {\n    title: 'How are black holes created?',\n    username: 'Sar',\n    text: \"I subscribed two months ago.\"\n  }, {\n    title: 'How are mitochondrias created?',\n    username: 'Davidov',\n    text: 'No idea haha, not interesting'\n  }, {\n    title: 'How are mitochondrias created?',\n    username: 'Sar',\n    text: 'Stop spamming Davidov'\n  }]);\n  useEffect(() => {\n    Axios({\n      method: \"GET\",\n      withCredentials: true,\n      url: \"http://localhost:5000/threads/answers\",\n      timeout: 4000\n    }).then(res => {\n      console.log(res);\n      setMessages(res);\n    });\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CreateAnswer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: buttonStyle.coolBeans,\n    onClick: handleOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 5\n    }\n  }, \"Write your answer\"), /*#__PURE__*/React.createElement(Modal, {\n    open: open,\n    \"aria-labelledby\": \"simple-modal-title\",\n    \"aria-describedby\": \"simple-modal-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }\n  }, body), /*#__PURE__*/React.createElement(ScrollTop, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(List, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 5\n    }\n  }, messages.filter(message => {\n    return message.title === thread;\n  }).map(message => /*#__PURE__*/React.createElement(ListItem, {\n    alignItems: \"flex-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ListItemAvatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    alt: \"Remy Sharp\",\n    src: \"/static/images/avatar/1.jpg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(ListItemText, {\n    primary: thread,\n    secondary: /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      component: \"span\",\n      variant: \"body2\",\n      className: classes.inline,\n      color: \"textPrimary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 15\n      }\n    }, message.username)), message.text),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }\n  })))));\n}","map":{"version":3,"sources":["/Users/fadimoughaizel/Desktop/Portfolio/Forum/forum/src/Pages/ThreadPage.js"],"names":["React","useEffect","useRef","useState","useParams","makeStyles","List","ListItem","Divider","ListItemText","ListItemAvatar","Avatar","Typography","CreateAnswer","ScrollTop","Axios","Modal","buttonStyle","useStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","inline","display","AlignItemsList","classes","thread","modalStyle","getModalStyle","open","setOpen","inputAnswer","console","log","submitAnswer","method","data","username","subject","body","withCredentials","url","timeout","then","res","catch","handleOpen","handleClose","messages","setMessages","title","text","coolBeans","filter","message","map"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef, useState} from 'react';\nimport {useParams} from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport CreateAnswer from '../components/CreateAnswer'\nimport ScrollTop from '../components/ScrollTop.js'\nimport Axios from 'axios'\nimport Modal from '@material-ui/core/Modal';\nimport buttonStyle from '../components/button.module.css'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    maxWidth: '200ch',\n    backgroundColor: theme.palette.background.paper,\n  },\n  inline: {\n    display: 'inline',\n  },\n}));\n\n\n\n\nexport default function AlignItemsList() {\n  const classes = useStyles();\n  let {thread} = useParams()\n  // getModalStyle is not a pure function, we roll the style only on the first render\n  const [modalStyle] = React.useState(getModalStyle);\n  const [open, setOpen] = React.useState(false);\n  const inputAnswer = useRef(null);\n  console.log(inputAnswer)\n  const submitAnswer = () => {\n    Axios({\n      method: \"POST\",\n      data: {\n         username: 'testUsername',\n         subject: 'testSubject',\n         body: inputAnswer,\n      },\n      withCredentials: true,\n      url: \"http://localhost:5000/threads/answer\",\n      timeout: 4000\n    }).then((res) => {\n      console.log(res)\n      setOpen(false)\n    })\n      .catch(console.log('Error posting answer'))\n  }\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const body = (\n    <div style={modalStyle} className={classes.paper}>\n      <h2 id=\"simple-modal-title\">Write your answer!</h2>\n      <div>\n      <textarea ref={inputAnswer} rows=\"10\" cols=\"40\" placeholder=\"Write answer here\"></textarea></div>\n      <button type=\"submit\" onClick={handleClose}>Cancel</button>\n      <button type=\"submit\" onClick={handleClose}>Ok</button>\n    </div>\n  );\n\n  const [messages, setMessages]= useState([\n    {\n      title: 'Supernova',\n      username: 'Jadeups',\n      text: 'Interesting question! I think it has to do with voliminous dying stars.'\n    },\n    {\n      title: 'How are black holes created?',\n      username: 'Rayyouch',\n      text: 'Indeed, but how, more specifically ?'\n    },\n    {\n      title: 'How are black holes created?',\n      username: 'Jadeups',\n      text: \"I don't know I am looking for the answer at the moment\"\n    },\n    {\n      title: 'How are black holes created?',\n      username: 'Rayyouch',\n      text: 'They form when stars that are voluminous enough die'\n    },\n    {\n      title: 'How are black holes created?',\n      username: 'Davidov',\n      text: \"I agree, but isn't there any other way to form black holes?\"\n    },\n    {\n      title: 'How are black holes created?',\n      username: 'Sar',\n      text: \"Not all stars form black holes\"\n    },\n    {\n      title: 'How are black holes created?',\n      username: 'Rayyouch',\n      text: \"Yes we know, we said that they have to be volumious enough\"\n    },\n    {\n      title: 'How are black holes created?',\n      username: 'Davidov',\n      text: \"Exactly\"\n    },\n    {\n      title: 'How are black holes created?',\n      username: 'Davidov',\n      text: \"Doesn't this conversation spark the interest of more users? hahaha\"\n    },\n    {\n      title: 'How are black holes created?',\n      username: 'Rayyouch',\n      text: \"This forum is quite new, so there aren't many members.\"\n    },\n    {\n      title: 'How are black holes created?',\n      username: 'Davidov',\n      text: \"Yeah we're like 100 people on the forum tops I think.\"\n    },\n    {\n      title: 'How are black holes created?',\n      username: 'Sar',\n      text: \"I subscribed two months ago.\"\n    },\n    {\n      title: 'How are mitochondrias created?',\n      username: 'Davidov',\n      text: 'No idea haha, not interesting'\n    },\n    {\n      title: 'How are mitochondrias created?',\n      username: 'Sar',\n      text: 'Stop spamming Davidov'\n    }\n  ])\n  useEffect(() => {\n    Axios({\n      method: \"GET\",\n      withCredentials: true,\n      url: \"http://localhost:5000/threads/answers\",\n      timeout: 4000\n    }).then((res) => {\n      console.log(res)\n      setMessages(res)\n    })\n  })\n\n  return (\n    <div>\n    <CreateAnswer/>\n\n    <button type=\"button\" className={buttonStyle.coolBeans}onClick={handleOpen}>\n        Write your answer\n      </button>\n      <Modal\n        open={open}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        {body}\n      </Modal>\n    <ScrollTop/>\n    <List className={classes.root}>\n      \n    {messages\n     .filter((message) => {\n      return message.title === thread\n     })\n    .map((message) => (\n      <ListItem alignItems=\"flex-start\">\n        <ListItemAvatar>\n          <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\n        </ListItemAvatar>\n        <ListItemText\n          primary={thread}\n          secondary={\n            <React.Fragment>\n              <div>\n              <Typography\n                component=\"span\"\n                variant=\"body2\"\n                className={classes.inline}\n                color=\"textPrimary\"\n              >\n                {message.username}\n              </Typography>\n              </div>\n               {message.text}\n            </React.Fragment>\n          }\n        />\n      </ListItem>\n    ))}\n    </List>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}