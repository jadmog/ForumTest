{"ast":null,"code":"var _jsxFileName = \"/Users/fadimoughaizel/Desktop/Portfolio/forum/src/Pages/SubjectPage.js\";\nimport React, { Component } from 'react';\nimport { Link, useParams } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport Thread from '../components/Thread.js';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CreateQuestion from '../components/CreateQuestion.js';\nimport questionButton from '../Pages/questionButton.module.css';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    height: 400,\n    maxWidth: 600,\n    backgroundColor: theme.palette.background.paper\n  }\n}));\nconst threads = [{\n  title: 'How are black holes created?',\n  subject: 'Physics',\n  author: 'Rayyoushi'\n}, {\n  title: 'How are mitochondrias created?',\n  subject: 'Biology',\n  author: 'Davidov'\n}, {\n  title: 'How are double arrays created?',\n  subject: 'Computer Science',\n  author: 'Sar'\n}];\n\nfunction SubjectPage() {\n  let {\n    subject\n  } = useParams();\n  return (\n    /*#__PURE__*/\n    // <div className={classes.root}>\n    React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: questionButton['c-checkbox'],\n      type: \"checkbox\",\n      id: \"checkbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 8\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: questionButton[\"c-formContainer\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      class: \"c-form\",\n      action: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      class: \"c-form__input\",\n      placeholder: \"Question\",\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      class: \"c-form__buttonLabel\",\n      for: \"checkbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      class: \"c-form__button\",\n      type: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, \"Send\")), /*#__PURE__*/React.createElement(\"label\", {\n      class: \"c-form__toggle\",\n      for: \"checkbox\",\n      \"data-title\": \"Notify me\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }\n    })))), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 6\n      }\n    }, threads.filter(thread => {\n      return thread.subject === subject;\n    }).map(thread => /*#__PURE__*/React.createElement(Link, {\n      to: {\n        pathname: '/thread/' + thread.title\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Thread, {\n      title: thread.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 57\n      }\n    })))))\n  );\n}\n\nSubjectPage.propTypes = {\n  data: PropTypes.string.isRequired\n};\nexport default SubjectPage;","map":{"version":3,"sources":["/Users/fadimoughaizel/Desktop/Portfolio/forum/src/Pages/SubjectPage.js"],"names":["React","Component","Link","useParams","PropTypes","Thread","makeStyles","CreateQuestion","questionButton","useStyles","theme","root","width","height","maxWidth","backgroundColor","palette","background","paper","threads","title","subject","author","SubjectPage","filter","thread","map","pathname","propTypes","data","string","isRequired"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport {\n  Link,\n  useParams\n} from \"react-router-dom\";\nimport PropTypes from 'prop-types'\nimport Thread from '../components/Thread.js'\nimport { makeStyles } from '@material-ui/core/styles';\nimport CreateQuestion from '../components/CreateQuestion.js'\nimport questionButton from '../Pages/questionButton.module.css'\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    height: 400,\n    maxWidth: 600,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nconst threads = [\n  {\n    title: 'How are black holes created?',\n    subject:'Physics',\n    author: 'Rayyoushi'\n  },\n  {\n    title: 'How are mitochondrias created?',\n    subject:'Biology',\n    author: 'Davidov'\n  },\n  {\n    title: 'How are double arrays created?',\n    subject:'Computer Science',\n    author: 'Sar'\n  },\n]\n\nfunction SubjectPage() {\n let { subject } = useParams();\n  \n  return (\n   // <div className={classes.root}>\n   <div>\n     <div>\n       <input className={questionButton.['c-checkbox']} type=\"checkbox\" id=\"checkbox\"/>\n          <div className={questionButton.[\"c-formContainer\"]}>\n            <form class=\"c-form\" action=\"\">\n              <input class=\"c-form__input\" placeholder=\"Question\" type=\"text\"/>\n              <label class=\"c-form__buttonLabel\" for=\"checkbox\">\n                <button class=\"c-form__button\" type=\"button\">Send</button>\n              </label>\n              <label class=\"c-form__toggle\" for=\"checkbox\" data-title=\"Notify me\"></label>\n            </form>\n          </div>\n     </div>\n     <h1>\n          {threads\n     .filter((thread) => {\n       return thread.subject === subject\n })\n    .map((thread) => (\n      <Link to={{pathname: '/thread/' + thread.title}} ><Thread\n      title={thread.title}/>\n      </Link>\n    ))}\n    </h1>\n   </div>\n  );   \n}\nSubjectPage.propTypes = {\n  data: PropTypes.string.isRequired\n}\nexport default SubjectPage"]},"metadata":{},"sourceType":"module"}