{"ast":null,"code":"var _jsxFileName = \"/Users/fadimoughaizel/Desktop/Portfolio/Forum/forum/src/Pages/SubjectPage.js\";\nimport React, { useRef, useState, useEffect } from 'react';\nimport { Link, useParams } from \"react-router-dom\";\nimport Thread from '../components/Thread.js';\nimport { makeStyles } from '@material-ui/core/styles';\nimport questionButton from '../Pages/questionButton.module.css';\nimport ScrollTop from '../components/ScrollTop.js';\n\nfunction SubjectPage() {\n  const useStyles = makeStyles(theme => ({\n    root: {\n      width: '100%',\n      height: 400,\n      maxWidth: 600,\n      backgroundColor: theme.palette.background.paper\n    }\n  }));\n  const [threads, setThreads] = useState([{\n    title: 'How are black holes created?',\n    subject: 'Physics',\n    author: 'Rayyoushi'\n  }, {\n    title: 'Is Schrodinger cat dead or alive?',\n    subject: 'Physics',\n    author: 'Jadeups'\n  }, {\n    title: 'What is a boson?',\n    subject: 'Physics',\n    author: 'Jadeups'\n  }, {\n    title: 'How did they calculate the speed of light?',\n    subject: 'Physics',\n    author: 'Rayyoushi'\n  }, {\n    title: 'Was Einstein really against quantum physics?',\n    subject: 'Physics',\n    author: 'Sandra'\n  }, {\n    title: 'Did Richard Feynman understand all quantum physics?',\n    subject: 'Physics',\n    author: 'Rayyoushi'\n  }, {\n    title: 'How smart is Neil De Grasse Tyson compared to Einstein?',\n    subject: 'Physics',\n    author: 'Steven'\n  }, {\n    title: 'Is Stephen Hawking really a genius?',\n    subject: 'Physics',\n    author: 'Rayyoushi'\n  }, {\n    title: 'How do supernovas form?',\n    subject: 'Physics',\n    author: 'Joseph'\n  }, {\n    title: 'Which is lighter, an electron or a proton?',\n    subject: 'Physics',\n    author: 'Fadi'\n  }, {\n    title: 'What is gravity?',\n    subject: 'Physics',\n    author: 'Marie'\n  }, {\n    title: 'How heavy is a boson?',\n    subject: 'Physics',\n    author: 'Paul'\n  }, {\n    title: 'How many quarks exist in 2020?',\n    subject: 'Physics',\n    author: 'Rayyoushi'\n  }, {\n    title: 'How many black holes exist in our galaxy?',\n    subject: 'Physics',\n    author: 'Rayyoushi'\n  }, {\n    title: 'What constitutes matter?',\n    subject: 'Physics',\n    author: 'Ryan'\n  }, {\n    title: 'Was Einstein popular before his Nobel Prize?',\n    subject: 'Physics',\n    author: 'Ryan'\n  }, {\n    title: 'Do quantitative physcis exist?',\n    subject: 'Physics',\n    author: 'Sarah'\n  }, {\n    title: 'How old is the oldest black hole?',\n    subject: 'Physics',\n    author: 'Karl'\n  }, {\n    title: 'Do we need black holes to exist?',\n    subject: 'Physics',\n    author: 'Jean'\n  }, {\n    title: 'Where will be earth in the universe in a million years?',\n    subject: 'Physics',\n    author: 'Marc'\n  }, {\n    title: 'What would happen if the sun exploded now?',\n    subject: 'Physics',\n    author: 'Jadeups'\n  }, {\n    title: 'Is relativity verified?',\n    subject: 'Physics',\n    author: 'Rayyoushi'\n  }, {\n    title: 'How are mitochondrias created?',\n    subject: 'Biology',\n    author: 'Davidov'\n  }, {\n    title: 'How are double arrays created?',\n    subject: 'Computer Science',\n    author: 'Sar'\n  }]);\n  const inputTitleRef = useRef(null);\n  let {\n    subject\n  } = useParams();\n\n  const submit = () => {\n    // recuperer les valeur dans mes \n    const title = inputTitleRef.current.value;\n    fetch(\"http://localhost:5000/subject/\", {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      method: 'POST',\n      body: JSON.stringify({\n        title: title\n      })\n    }).then(response => response.json()).then(newThread => {\n      console.log('thread', newThread); // \n\n      setThreads([...threads, newThread]);\n      alert('thread saved !');\n    }).catch(error => console.log('error', error));\n  };\n\n  useEffect(() => {\n    fetch(\"http://localhost:5000/subject\", {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      method: 'GET'\n    }).then(response => response.json()).then(result => {\n      setThreads(result);\n    }).catch(error => console.log('error', error));\n  }, []);\n  return (\n    /*#__PURE__*/\n    // <div className={classes.root}>\n    React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: questionButton[\"c-checkbox\"],\n      type: \"checkbox\",\n      id: \"checkbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 8\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: questionButton[\"c-formContainer\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: questionButton[\"c-form\"],\n      action: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: questionButton[\"c-form__input\"],\n      ref: inputTitleRef,\n      placeholder: \"Question\",\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: questionButton[\"c-form__buttonLabel\"],\n      for: \"checkbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: questionButton[\"c-form__button\"],\n      type: \"button\",\n      onClick: submit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }\n    }, \"Ask\")), /*#__PURE__*/React.createElement(\"label\", {\n      className: questionButton[\"c-form__toggle\"],\n      for: \"checkbox\",\n      \"data-title\": \"Ask a question\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 15\n      }\n    })))), /*#__PURE__*/React.createElement(ScrollTop, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 6\n      }\n    }, threads.filter(thread => {\n      return thread.subject === subject;\n    }).map(thread => /*#__PURE__*/React.createElement(Link, {\n      to: {\n        pathname: '/thread/' + thread.title\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Thread, {\n      title: thread.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 57\n      }\n    })))))\n  );\n}\n\nexport default SubjectPage;","map":{"version":3,"sources":["/Users/fadimoughaizel/Desktop/Portfolio/Forum/forum/src/Pages/SubjectPage.js"],"names":["React","useRef","useState","useEffect","Link","useParams","Thread","makeStyles","questionButton","ScrollTop","SubjectPage","useStyles","theme","root","width","height","maxWidth","backgroundColor","palette","background","paper","threads","setThreads","title","subject","author","inputTitleRef","submit","current","value","fetch","headers","method","body","JSON","stringify","then","response","json","newThread","console","log","alert","catch","error","result","filter","thread","map","pathname"],"mappings":"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","sourcesContent":["import React, {useRef, useState, useEffect} from 'react'\nimport {\n  Link,\n  useParams\n} from \"react-router-dom\";\nimport Thread from '../components/Thread.js'\nimport { makeStyles } from '@material-ui/core/styles';\nimport questionButton from '../Pages/questionButton.module.css'\nimport ScrollTop from '../components/ScrollTop.js'\n\n\n\nfunction SubjectPage() {\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    height: 400,\n    maxWidth: 600,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nconst [threads, setThreads] = useState([\n  {\n    title: 'How are black holes created?',\n    subject:'Physics',\n    author: 'Rayyoushi'\n  },\n  {\n    title: 'Is Schrodinger cat dead or alive?',\n    subject:'Physics',\n    author: 'Jadeups'\n  },\n  {\n    title: 'What is a boson?',\n    subject:'Physics',\n    author: 'Jadeups'\n  },\n  {\n    title: 'How did they calculate the speed of light?',\n    subject:'Physics',\n    author: 'Rayyoushi'\n  },\n  {\n    title: 'Was Einstein really against quantum physics?',\n    subject:'Physics',\n    author: 'Sandra'\n  },\n  {\n    title: 'Did Richard Feynman understand all quantum physics?',\n    subject:'Physics',\n    author: 'Rayyoushi'\n  },\n  {\n    title: 'How smart is Neil De Grasse Tyson compared to Einstein?',\n    subject:'Physics',\n    author: 'Steven'\n  },\n  {\n    title: 'Is Stephen Hawking really a genius?',\n    subject:'Physics',\n    author: 'Rayyoushi'\n  },\n  {\n    title: 'How do supernovas form?',\n    subject:'Physics',\n    author: 'Joseph'\n  },\n  {\n    title: 'Which is lighter, an electron or a proton?',\n    subject:'Physics',\n    author: 'Fadi'\n  },\n  {\n    title: 'What is gravity?',\n    subject:'Physics',\n    author: 'Marie'\n  },\n  {\n    title: 'How heavy is a boson?',\n    subject:'Physics',\n    author: 'Paul'\n  },\n  {\n    title: 'How many quarks exist in 2020?',\n    subject:'Physics',\n    author: 'Rayyoushi'\n  },\n  {\n    title: 'How many black holes exist in our galaxy?',\n    subject:'Physics',\n    author: 'Rayyoushi'\n  },\n  {\n    title: 'What constitutes matter?',\n    subject:'Physics',\n    author: 'Ryan'\n  },\n  {\n    title: 'Was Einstein popular before his Nobel Prize?',\n    subject:'Physics',\n    author: 'Ryan'\n  },\n  {\n    title: 'Do quantitative physcis exist?',\n    subject:'Physics',\n    author: 'Sarah'\n  },\n  {\n    title: 'How old is the oldest black hole?',\n    subject:'Physics',\n    author: 'Karl'\n  },\n  {\n    title: 'Do we need black holes to exist?',\n    subject:'Physics',\n    author: 'Jean'\n  },\n  {\n    title: 'Where will be earth in the universe in a million years?',\n    subject:'Physics',\n    author: 'Marc'\n  },\n  {\n    title: 'What would happen if the sun exploded now?',\n    subject:'Physics',\n    author: 'Jadeups'\n  },\n  {\n    title: 'Is relativity verified?',\n    subject:'Physics',\n    author: 'Rayyoushi'\n  },\n  {\n    title: 'How are mitochondrias created?',\n    subject:'Biology',\n    author: 'Davidov'\n  },\n  {\n    title: 'How are double arrays created?',\n    subject:'Computer Science',\n    author: 'Sar'\n  },\n])\n\n const inputTitleRef = useRef(null);\n let { subject } = useParams();\n\n const submit = () => {\n  // recuperer les valeur dans mes \n  const title = inputTitleRef.current.value;\n  \n\n  fetch(\"http://localhost:5000/subject/\", {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    method: 'POST',\n    body: JSON.stringify({\n      title: title\n    }),\n  })\n    .then(response => response.json())\n    .then(newThread => {\n      console.log('thread', newThread);\n      // \n      setThreads([\n        ...threads,\n        newThread\n      ])\n      alert('thread saved !')\n    })\n    .catch(error => console.log('error', error));\n}\n\nuseEffect(() => {\n  fetch(\"http://localhost:5000/subject\", {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    method: 'GET',\n  })\n    .then(response => response.json())\n    .then(result => {\n      setThreads(result);\n    })\n    .catch(error => console.log('error', error));\n}, []);\n\n  return (\n   // <div className={classes.root}>\n   <div>\n     <div>\n       <input className={questionButton[\"c-checkbox\"]} type=\"checkbox\" id=\"checkbox\"/>\n          <div className={questionButton[\"c-formContainer\"]}>\n            <form className={questionButton[\"c-form\"]} action=\"\">\n              <input className={questionButton[\"c-form__input\"]} ref= {inputTitleRef} placeholder=\"Question\" type=\"text\"/>\n              <label className={questionButton[\"c-form__buttonLabel\"]} for=\"checkbox\">\n                <button className={questionButton[\"c-form__button\"]} type=\"button\" onClick={submit}>Ask</button>\n              </label>\n              <label className={questionButton[\"c-form__toggle\"]} for=\"checkbox\" data-title=\"Ask a question\"></label>\n            </form>\n          </div>\n     </div>\n     <ScrollTop/>\n     <h1>\n          {threads\n     .filter((thread) => {\n       return thread.subject === subject\n })\n    .map((thread) => (\n      <Link to={{pathname: '/thread/' + thread.title}} ><Thread\n      title={thread.title}/>\n      </Link>\n    ))}\n    </h1>\n   </div>\n  );   \n}\nexport default SubjectPage"]},"metadata":{},"sourceType":"module"}