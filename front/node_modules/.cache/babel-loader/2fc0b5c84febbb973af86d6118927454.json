{"ast":null,"code":"var _jsxFileName = \"/Users/fadimoughaizel/Desktop/Portfolio/forum/src/Pages/SubjectPage.js\";\nimport React, { Component, useState } from 'react';\nimport { Link, useParams } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport Thread from '../components/Thread.js';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CreateQuestion from '../components/CreateQuestion.js';\nimport questionButton from '../Pages/questionButton.module.css';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    height: 400,\n    maxWidth: 600,\n    backgroundColor: theme.palette.background.paper\n  }\n}));\nconst threads = [{\n  title: 'How are black holes created?',\n  subject: 'Physics',\n  author: 'Rayyoushi'\n}, {\n  title: 'How are mitochondrias created?',\n  subject: 'Biology',\n  author: 'Davidov'\n}, {\n  title: 'How are double arrays created?',\n  subject: 'Computer Science',\n  author: 'Sar'\n}];\n\nfunction SubjectPage() {\n  const [showScroll, setShowScroll] = useState(false);\n\n  const checkScrollTop = () => {\n    if (!showScroll && window.pageYOffset > 400) {\n      setShowScroll(false);\n    } else if (showScroll && window.pageYOffset <= 400) {\n      setShowScroll(true);\n    }\n  };\n\n  window.addEventListener('scroll', checkScrollTop);\n  let {\n    subject\n  } = useParams();\n  return (\n    /*#__PURE__*/\n    // <div className={classes.root}>\n    React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: questionButton[\"c-checkbox\"],\n      type: \"checkbox\",\n      id: \"checkbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 8\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: questionButton[\"c-formContainer\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: questionButton[\"c-form\"],\n      action: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: questionButton[\"c-form__input\"],\n      placeholder: \"Question\",\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: questionButton[\"c-form__buttonLabel\"],\n      for: \"checkbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: questionButton[\"c-form__button\"],\n      type: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, \"Ask\")), /*#__PURE__*/React.createElement(\"label\", {\n      className: questionButton[\"c-form__toggle\"],\n      for: \"checkbox\",\n      \"data-title\": \"Ask a question\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 15\n      }\n    })))), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 6\n      }\n    }, threads.filter(thread => {\n      return thread.subject === subject;\n    }).map(thread => /*#__PURE__*/React.createElement(Link, {\n      to: {\n        pathname: '/thread/' + thread.title\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Thread, {\n      title: thread.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 57\n      }\n    })))))\n  );\n}\n\nSubjectPage.propTypes = {\n  data: PropTypes.string.isRequired\n};\nexport default SubjectPage;","map":{"version":3,"sources":["/Users/fadimoughaizel/Desktop/Portfolio/forum/src/Pages/SubjectPage.js"],"names":["React","Component","useState","Link","useParams","PropTypes","Thread","makeStyles","CreateQuestion","questionButton","useStyles","theme","root","width","height","maxWidth","backgroundColor","palette","background","paper","threads","title","subject","author","SubjectPage","showScroll","setShowScroll","checkScrollTop","window","pageYOffset","addEventListener","filter","thread","map","pathname","propTypes","data","string","isRequired"],"mappings":"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","sourcesContent":["import React, {Component, useState} from 'react'\nimport {\n  Link,\n  useParams\n} from \"react-router-dom\";\nimport PropTypes from 'prop-types'\nimport Thread from '../components/Thread.js'\nimport { makeStyles } from '@material-ui/core/styles';\nimport CreateQuestion from '../components/CreateQuestion.js'\nimport questionButton from '../Pages/questionButton.module.css'\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    height: 400,\n    maxWidth: 600,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nconst threads = [\n  {\n    title: 'How are black holes created?',\n    subject:'Physics',\n    author: 'Rayyoushi'\n  },\n  {\n    title: 'How are mitochondrias created?',\n    subject:'Biology',\n    author: 'Davidov'\n  },\n  {\n    title: 'How are double arrays created?',\n    subject:'Computer Science',\n    author: 'Sar'\n  },\n]\n\nfunction SubjectPage() {\n  const [showScroll, setShowScroll] = useState(false)\n  const checkScrollTop = () => {    \n     if (!showScroll && window.pageYOffset > 400){\n        setShowScroll(false)    \n     } else if (showScroll && window.pageYOffset <= 400){\n        setShowScroll(true)    \n     }  \n  };\n  window.addEventListener('scroll', checkScrollTop)\n\n let { subject } = useParams();\n  \n  return (\n   // <div className={classes.root}>\n   <div>\n     <div>\n       <input className={questionButton.[\"c-checkbox\"]} type=\"checkbox\" id=\"checkbox\"/>\n          <div className={questionButton.[\"c-formContainer\"]}>\n            <form className={questionButton.[\"c-form\"]} action=\"\">\n              <input className={questionButton.[\"c-form__input\"]} placeholder=\"Question\" type=\"text\"/>\n              <label className={questionButton.[\"c-form__buttonLabel\"]} for=\"checkbox\">\n                <button className={questionButton.[\"c-form__button\"]} type=\"button\">Ask</button>\n              </label>\n              <label className={questionButton.[\"c-form__toggle\"]} for=\"checkbox\" data-title=\"Ask a question\"></label>\n            </form>\n          </div>\n     </div>\n     <h1>\n          {threads\n     .filter((thread) => {\n       return thread.subject === subject\n })\n    .map((thread) => (\n      <Link to={{pathname: '/thread/' + thread.title}} ><Thread\n      title={thread.title}/>\n      </Link>\n    ))}\n    </h1>\n   </div>\n  );   \n}\nSubjectPage.propTypes = {\n  data: PropTypes.string.isRequired\n}\nexport default SubjectPage"]},"metadata":{},"sourceType":"module"}