{"ast":null,"code":"var _jsxFileName = \"/Users/fadimoughaizel/Desktop/Portfolio/Forum/forum/src/Pages/SubjectPage.js\";\nimport React, { useRef, useState, useEffect } from 'react';\nimport { Link, useParams } from \"react-router-dom\";\nimport Thread from '../components/Thread.js';\nimport { makeStyles } from '@material-ui/core/styles';\nimport questionButton from '../Pages/questionButton.module.css';\nimport ScrollTop from '../components/ScrollTop.js';\n\nfunction SubjectPage() {\n  const useStyles = makeStyles(theme => ({\n    root: {\n      width: '100%',\n      height: 400,\n      maxWidth: 600,\n      backgroundColor: theme.palette.background.paper\n    }\n  }));\n  const [threads, setThreads] = useState([]);\n  const inputTitleRef = useRef(null);\n  let {\n    subject\n  } = useParams();\n\n  const submit = () => {\n    const title = inputTitleRef.current.value;\n    fetch(\"http://localhost:5000/subject/subject\", {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      method: 'POST',\n      body: JSON.stringify({\n        title: title,\n        subject: subject\n      })\n    }).then(response => response.json()).then(newThread => {\n      console.log('thread', newThread); // \n\n      setThreads([...threads, newThread]);\n      alert('thread saved !');\n    }).catch(error => console.log('error', error));\n  };\n\n  useEffect(() => {\n    fetch(\"http://localhost:5000/subject/subject\", {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      method: 'GET'\n    }).then(response => response.json()).then(result => {\n      console.log(result);\n      setThreads(result);\n    }).catch(error => console.log('error', error));\n  }, []);\n  return (\n    /*#__PURE__*/\n    // <div className={classes.root}>\n    React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: questionButton[\"c-checkbox\"],\n      type: \"checkbox\",\n      id: \"checkbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 8\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: questionButton[\"c-formContainer\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: questionButton[\"c-form\"],\n      action: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: questionButton[\"c-form__input\"],\n      ref: inputTitleRef,\n      placeholder: \"Question\",\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: questionButton[\"c-form__buttonLabel\"],\n      for: \"checkbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: questionButton[\"c-form__button\"],\n      type: \"button\",\n      onClick: submit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }, \"Ask\")), /*#__PURE__*/React.createElement(\"label\", {\n      className: questionButton[\"c-form__toggle\"],\n      for: \"checkbox\",\n      \"data-title\": \"Ask a question\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }\n    })))), /*#__PURE__*/React.createElement(ScrollTop, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 6\n      }\n    }, threads.filter(thread => {\n      return thread.subject === subject;\n    }).map((thread, key) => /*#__PURE__*/React.createElement(Link, {\n      to: {\n        pathname: '/thread/' + thread.title\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Thread, {\n      key: key,\n      title: thread.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 57\n      }\n    })))))\n  );\n}\n\nexport default SubjectPage;","map":{"version":3,"sources":["/Users/fadimoughaizel/Desktop/Portfolio/Forum/forum/src/Pages/SubjectPage.js"],"names":["React","useRef","useState","useEffect","Link","useParams","Thread","makeStyles","questionButton","ScrollTop","SubjectPage","useStyles","theme","root","width","height","maxWidth","backgroundColor","palette","background","paper","threads","setThreads","inputTitleRef","subject","submit","title","current","value","fetch","headers","method","body","JSON","stringify","then","response","json","newThread","console","log","alert","catch","error","result","filter","thread","map","key","pathname"],"mappings":"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","sourcesContent":["import React, {useRef, useState, useEffect} from 'react'\nimport {\n  Link,\n  useParams\n} from \"react-router-dom\";\nimport Thread from '../components/Thread.js'\nimport { makeStyles } from '@material-ui/core/styles';\nimport questionButton from '../Pages/questionButton.module.css'\nimport ScrollTop from '../components/ScrollTop.js'\n\n\n\nfunction SubjectPage() {\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    height: 400,\n    maxWidth: 600,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nconst [threads, setThreads] = useState([])\n\n const inputTitleRef = useRef(null);\n let { subject } = useParams();\n\n const submit = () => {\n\n  const title = inputTitleRef.current.value;\n\n  fetch(\"http://localhost:5000/subject/subject\", {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    method: 'POST',\n    body: JSON.stringify({\n      title: title,\n      subject: subject\n    }),\n  })\n    .then(response => response.json())\n    .then(newThread => {\n      console.log('thread', newThread);\n      // \n      setThreads([\n        ...threads,\n        newThread\n      ])\n      alert('thread saved !')\n    })\n    .catch(error => console.log('error', error));\n}\n\nuseEffect(() => {\n  fetch(\"http://localhost:5000/subject/subject\", {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    method: 'GET',\n  })\n    .then(response => response.json())\n    .then(result => {\n      console.log(result)\n      setThreads(result);\n    })\n    .catch(error => console.log('error', error));\n}, []);\n\n  return (\n   // <div className={classes.root}>\n   <div>\n     <div>\n       <input className={questionButton[\"c-checkbox\"]} type=\"checkbox\" id=\"checkbox\"/>\n          <div className={questionButton[\"c-formContainer\"]}>\n            <form className={questionButton[\"c-form\"]} action=\"\">\n              <input className={questionButton[\"c-form__input\"]} ref= {inputTitleRef} placeholder=\"Question\" type=\"text\"/>\n              <label className={questionButton[\"c-form__buttonLabel\"]} for=\"checkbox\">\n                <button className={questionButton[\"c-form__button\"]} type=\"button\" onClick={submit}>Ask</button>\n              </label>\n              <label className={questionButton[\"c-form__toggle\"]} for=\"checkbox\" data-title=\"Ask a question\"></label>\n            </form>\n          </div>\n     </div>\n     <ScrollTop/>\n     <h1>\n          {threads\n      .filter((thread) => {\n        return thread.subject === subject\n  })\n    .map((thread, key) => (\n      <Link to={{pathname: '/thread/' + thread.title}} ><Thread\n      key={key}\n      title={thread.title}/>\n      </Link>\n    ))}\n    </h1>\n   </div>\n  );   \n}\nexport default SubjectPage"]},"metadata":{},"sourceType":"module"}